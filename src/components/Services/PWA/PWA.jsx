import { BurgerIcon } from 'components/Welcome/Welcome.styled';
import {
  PWAContainer,
  PWAGreenOverlay,
  PWAImageContainer,
  PWAImagesContainer,
  PWALeftImage,
  PWAMainTitle,
  PWARightImage,
  PWAStarContainer,
  PWAStarImg,
  PWASubTItle,
  PWAText,
  PWATextOverlay,
} from './PWA.styled';
import { Form, NavLink } from 'react-router-dom';
import { BackArrow } from '../Services.styled';
import SideBarMenu from 'components/SideBarMenu/SideBarMenu';
import { useEffect, useState } from 'react';
import gsap from 'gsap';
import screen_one from '../../../image/screen_one.png';
import screen_two from '../../../image/screen_two.png';
import star from '../../../image/Star.svg';
import { Attach, AttachButton, ButtonGroup, Con, FormPar, FormText, FormText2, FormWrap, FormWrapText, InputLine, SendButton, TextArea } from 'components/MainForm/MainForm.styled';
import AttachIcon from '../../../image/Vector66.svg';
import axios from 'axios';

const PWA = () => {
  const [sidebarSwitcher, setSidebarSwitcher] = useState(false); // –°—Ç–µ–π—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–µ–Ω—é

  const onClickGood = () => {
    setSidebarSwitcher(prevState => !prevState); // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–Ω—é
  };

  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é (—Å–ø—Ä—è—Ç–∞–Ω–æ)
    gsap.set('.sideMenu', { x: '-100vw' });
    gsap.to('.star', {
      rotation: '+=360', // –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —É–≥–ª–∞ –≤—Ä–∞—â–µ–Ω–∏—è
      duration: 5,
      repeat: -1, // –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
      ease: 'linear', // –õ–∏–Ω–µ–π–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
    });
  }, []);

  const [formData, setFormData] = useState({
    name: '',
    contact: '',
  });

  const handleChange = e => {
    const { name, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = async e => {
    e.preventDefault();
    try {
      await axios.post('http://localhost:5000/send', formData);
      alert("–î—è–∫—É—é—î–º–æ –∑–∞ –∑–∞—è–≤–∫—É! –°–∫–æ—Ä–æ –∑ –≤–∞–º–∏ –∑–≤`—è–∂—É—Ç—å—Å—è –Ω–∞—à—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏!");
    } catch (error) {
      console.log(error);
      alert('–£–ø—Å! –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫! üò¢');
    }

    setFormData({
      name: '',
      contact: '',
    });
  };

  return (
    <PWAContainer>
      <BurgerIcon onClick={onClickGood} className="good" />
      <NavLink to="/" style={{ textDecoration: 'none' }}>
        <BackArrow />
      </NavLink>
      <SideBarMenu isOpen={sidebarSwitcher} />

      <PWAMainTitle>PIWA</PWAMainTitle>
      <PWASubTItle>PROGRESSIVE INCREDIBLE WEB APPS</PWASubTItle>

      <PWAImagesContainer>
        <PWAImageContainer isLeft>
          <>
            <PWALeftImage src={screen_one} />
            <PWAGreenOverlay />
          </>
          <PWATextOverlay>CODEBEARS</PWATextOverlay>
        </PWAImageContainer>
        <PWAImageContainer>
          <>
            <PWARightImage src={screen_two} />
            <PWAGreenOverlay />
          </>
          <PWATextOverlay>KN.MYSTRN</PWATextOverlay>
        </PWAImageContainer>
      </PWAImagesContainer>

      <PWAText>
        Progressive Web Apps (PWA) ‚Äî —Ü–µ –≤–µ–±-–¥–æ–¥–∞—Ç–∫–∏, —è–∫—ñ –ø–æ—î–¥–Ω—É—é—Ç—å –Ω–∞–π–∫—Ä–∞—â—ñ
        –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –≤–µ–±—Å–∞–π—Ç—ñ–≤ —Ç–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤. –í–æ–Ω–∏ —à–≤–∏–¥–∫–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è,
        –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞–≤—ñ—Ç—å –±–µ–∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É, —Ç–∞ –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å –∑—Ä—É—á–Ω—ñ—Å—Ç—å
        –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–∞–≤–¥—è–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–º—É –¥–∏–∑–∞–π–Ω—É. –ù–∞—à–∞ –∫–æ–º–ø–∞–Ω—ñ—è –≤–æ–ª–æ–¥—ñ—î
        –≥–ª–∏–±–æ–∫–∏–º–∏ –∑–Ω–∞–Ω–Ω—è–º–∏ —É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ PWA, –∑–∞–≤–¥—è–∫–∏ —á–æ–º—É –º–∏ –∑–¥–∞—Ç–Ω—ñ —Ä–æ–∑—Ä–æ–±–ª—è—Ç–∏
        —Å—É—á–∞—Å–Ω—ñ, –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ —Ç–∞ –∑—Ä—É—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è, —è–∫—ñ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—Ç—å –ø–æ—Ç—Ä–µ–±–∏ –≤–∞—à–∏—Ö
        –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ –ø–æ–∫—Ä–∞—â–∞—Ç—å —ó—Ö–Ω—ñ–π –¥–æ—Å–≤—ñ–¥. –ú–∏ –∑–Ω–∞—î–º–æ, —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏
        —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —â–æ–± –≤–∞—à –±—ñ–∑–Ω–µ—Å –æ—Ç—Ä–∏–º–∞–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏.
      </PWAText>
      <PWAStarContainer>
        <PWAStarImg src={star} className="star" />
      </PWAStarContainer>
      <FormWrap>
        <FormWrapText className="form-text">
          <FormText>
            –í–°–ï –ó –ß–û–ì–û–°–¨ –ü–û–ß–ò–ù–ê–Ñ–¢–¨–°–Ø <br />
          </FormText>
          <FormText2>
            –ó–∞–ª–∏—à—Ç–µ –≤–∞—à—ñ –¥–∞–Ω–Ω—ñ —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ –ø—Ä–æ–µ–∫—Ç—É —É —Ñ–æ—Ä–º—ñ –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–≥–æ
            –∑–≤‚Äô—è–∑–∫—É
          </FormText2>
          <FormPar>
            –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –æ–ø—Ä–∞—Ü—é—î –∑–∞–ø–∏—Ç, —â–æ–± –Ω–∞–¥–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–±–æ
            –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è. –ú–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ —É –Ω–∞–π–∫–æ—Ä–æ—Ç—à—ñ —Ç–µ—Ä–º—ñ–Ω–∏
            —á–µ—Ä–µ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–∏–π —Å–ø–æ—Å—ñ–± –∑–≤‚Äô—è–∑–∫—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∞–±–æ –ø–æ–¥–∞–ª—å—à–æ—ó
            —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ.
          </FormPar>
        </FormWrapText>
        <Form className="form" onSubmit={handleSubmit}>
          <Con>
            <InputLine
              type="text"
              name="name"
              value={formData.name}
              onChange={handleChange}
            />
            <InputLine
              type="text"
              name="contact"
              value={formData.contact}
              onChange={handleChange}
            />
            <TextArea type="text" />
          </Con>
          <ButtonGroup>
            <AttachButton>
              <Attach alt="AttachIcon" src={AttachIcon} />
            </AttachButton>
            <SendButton type="submit">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏</SendButton>
          </ButtonGroup>
        </Form>
      </FormWrap>
    </PWAContainer>
  );
};

export default PWA;
