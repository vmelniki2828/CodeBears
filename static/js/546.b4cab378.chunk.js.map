{"version":3,"file":"static/js/546.b4cab378.chunk.js","mappings":"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","sources":["image/VectorWhite.svg","addition/ServicesList/ServicesList.styled.jsx","addition/ServicesList/ServicesList.jsx","addition/TwoExamplesBanners/TwoExamplesBanners.styled.jsx","addition/TwoExamplesBanners/TwoExamplesBanners.jsx","components/Services/Baners/Baners.styled.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVectorWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 29,\n    viewBox: \"0 0 29 29\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 2H27M27 2V28M27 2L2 27.1186\",\n    stroke: \"white\",\n    strokeWidth: 3\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVectorWhite);\nexport default __webpack_public_path__ + \"static/media/VectorWhite.7987f76b90356cc8ae24265bd36fc871.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nexport const ListTitle = styled.h2`\r\n  margin: 0;\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 50px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  background: linear-gradient(123.73deg, #ffffff -44.77%, #45aeb1 302.21%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n  text-shadow: 0px 0px 1.5px rgba(87, 255, 154, 0.69), 0px 0px 28.7px #45aeb1;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  width: 1182px;\r\n  color: #ffffff;\r\n  margin-top: 40px;\r\n`;\r\n","import { List, ListItem, ListTitle } from './ServicesList.styled';\r\n\r\nconst ServicesList = ({ title, data }) => {\r\n  return (\r\n    <>\r\n      <ListTitle>{title}</ListTitle>\r\n      <List>\r\n        {data.map(item => {\r\n          return <ListItem>{item}</ListItem>;\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicesList;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const GreenOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 255, 0, 0.3); /* Полупрозрачный зелёный */\r\n  mix-blend-mode: multiply; /* Эффект наложения */\r\n  transition: opacity 0.3s ease; /* Добавляем плавность исчезновения */\r\n  opacity: 1; /* Делаем видимым по умолчанию */\r\n`;\r\n\r\nexport const TextOverlay = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  pointer-events: none; /* Чтобы текст не мешал наведению на изображение */\r\n  opacity: 1; /* Текст видим изначально */\r\n  transition: opacity 0.3s ease; /* Анимация исчезновения текста */\r\n\r\n  font-family: 'Freigeist', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 41px;\r\n  line-height: 51px;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration-line: underline;\r\n  text-decoration-thickness: 2px;\r\n  text-underline-offset: 10px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  position: relative; /* Обязательно для позиционирования текста */\r\n  color: #fff;\r\n  flex: ${({ isLeft }) =>\r\n    isLeft ? '4' : '6'}; /* 40% для левого, 60% для правого */\r\n  height: auto; /* Чтобы сохранить пропорции изображений */\r\n\r\n  &:hover ${TextOverlay}, &:hover ${GreenOverlay} {\r\n    opacity: 0; /* Прячем текст и оверлей при наведении */\r\n    pointer-events: none; /* Отключаем интерактивность для исчезнувших элементов */\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ArrowLink = styled.img`\r\n  width: 25px;\r\n  height: 26px;\r\n  margin-left: 18px;\r\n  margin-top: 8px;\r\n  fill: #fff;\r\n`;","import {\r\n  ArrowLink,\r\n  GreenOverlay,\r\n  Image,\r\n  ImageContainer,\r\n  MainContainer,\r\n  TextOverlay,\r\n} from './TwoExamplesBanners.styled';\r\nimport screen_one from '../../image/screen_one.png';\r\nimport screen_two from '../../image/screen_two.png';\r\nimport WhiteArrow from '../../image/VectorWhite.svg';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport { useEffect, useRef } from 'react';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst TwoExamplesBanners = () => {\r\n  const leftRef = useRef(null);\r\n  const rightRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const leftElement = leftRef.current;\r\n    const rightElement = rightRef.current;\r\n\r\n    // Анимация для левого блока\r\n    gsap.fromTo(\r\n      leftElement,\r\n      { x: -200, opacity: 0 },\r\n      {\r\n        x: 0,\r\n        opacity: 1,\r\n        duration: 1.5,\r\n        ease: 'power3.out',\r\n        scrollTrigger: {\r\n          trigger: leftElement,\r\n          start: 'top 80%',\r\n          end: 'top 50%',\r\n          toggleActions: 'play none none none',\r\n        },\r\n      }\r\n    );\r\n\r\n    // Анимация для правого блока\r\n    gsap.fromTo(\r\n      rightElement,\r\n      { x: 200, opacity: 0 },\r\n      {\r\n        x: 0,\r\n        opacity: 1,\r\n        duration: 1.5,\r\n        ease: 'power3.out',\r\n        scrollTrigger: {\r\n          trigger: rightElement,\r\n          start: 'top 80%',\r\n          end: 'top 50%',\r\n          toggleActions: 'play none none none',\r\n        },\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <ImageContainer ref={leftRef} isLeft>\r\n        <>\r\n          <Image src={screen_one} />\r\n          <GreenOverlay />\r\n        </>\r\n        <TextOverlay>\r\n          CODEBEARS <ArrowLink src={WhiteArrow} />\r\n        </TextOverlay>\r\n      </ImageContainer>\r\n      <ImageContainer ref={rightRef}>\r\n        <>\r\n          <Image src={screen_two} />\r\n          <GreenOverlay />\r\n        </>\r\n        <TextOverlay>\r\n          KN.MYSTRN <ArrowLink src={WhiteArrow} />\r\n        </TextOverlay>\r\n      </ImageContainer>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default TwoExamplesBanners;\r\n","import styled from 'styled-components';\r\nimport green_play from '../../../image/green_play.png';\r\n\r\nexport const BanersPageContainer = styled.div`\r\n  width: 1310px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding-bottom: 150px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const MainBannerContainer = styled.div`\r\n  background: radial-gradient(\r\n      145.11% 101.78% at 50% 50%,\r\n      #06050a 0%,\r\n      #0f1924 100%\r\n    )\r\n    /* warning: gradient uses a rotation that is not supported by CSS and may not behave as expected */;\r\n`;\r\n\r\nexport const BanersMainTitle = styled.h1`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 132px;\r\n  line-height: 164px;\r\n  display: flex;\r\n  text-transform: uppercase;\r\n  margin: 0 0 20px 0;\r\n  padding-top: 127px;\r\n\r\n  background: linear-gradient(123.73deg, #ffffff -44.77%, #45aeb1 302.21%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\n\r\nexport const BanersSubTitle = styled.h2`\r\n  margin: 60px 0 30px 0;\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 50px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  background: linear-gradient(123.73deg, #ffffff -44.77%, #45aeb1 302.21%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n  text-shadow: 0px 0px 1.5px rgba(87, 255, 154, 0.69), 0px 0px 28.7px #45aeb1;\r\n`;\r\n\r\nexport const BanersFormatsText = styled.h3`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  color: #ffffff;\r\n  margin: 40px 0;\r\n`;\r\n\r\nexport const BanersDefaultText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  color: #ffffff;\r\n  width: 1310px;\r\n`;\r\n\r\nexport const BanersImagesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const BanersGreenOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 255, 0, 0.3); /* Полупрозрачный зелёный */\r\n  mix-blend-mode: multiply; /* Эффект наложения */\r\n  transition: opacity 0.3s ease; /* Добавляем плавность исчезновения */\r\n  opacity: 1; /* Делаем видимым по умолчанию */\r\n`;\r\n\r\nexport const BanersTextOverlay = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  pointer-events: none; /* Чтобы текст не мешал наведению на изображение */\r\n  opacity: 1; /* Текст видим изначально */\r\n  transition: opacity 0.3s ease; /* Анимация исчезновения текста */\r\n\r\n  font-family: 'Freigeist', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 41px;\r\n  line-height: 51px;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration-line: underline;\r\n  text-decoration-thickness: 2px;\r\n  text-underline-offset: 10px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const BanersImageContainer = styled.div`\r\n  position: relative; /* Обязательно для позиционирования текста */\r\n  color: #fff;\r\n  flex: ${({ isLeft }) =>\r\n    isLeft ? '4' : '6'}; /* 40% для левого, 60% для правого */\r\n  height: auto; /* Чтобы сохранить пропорции изображений */\r\n\r\n  &:hover ${BanersTextOverlay}, &:hover ${BanersGreenOverlay} {\r\n    opacity: 0; /* Прячем текст и оверлей при наведении */\r\n    pointer-events: none; /* Отключаем интерактивность для исчезнувших элементов */\r\n  }\r\n`;\r\n\r\nexport const BanersImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ArrowLinkBaners = styled.img`\r\n  width: 25px;\r\n  height: 26px;\r\n  margin-left: 18px;\r\n  margin-top: 8px;\r\n  fill: #fff;\r\n`;\r\n\r\nexport const BanersFormatsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin: 0 0 60px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const BanersFormatsContainerItem = styled.div`\r\n  width: 560px;\r\n  background: url(.png),\r\n    linear-gradient(\r\n      100.71deg,\r\n      rgba(30, 40, 66, 0.28) -5.17%,\r\n      rgba(18, 22, 33, 0.28) 147.95%\r\n    );\r\n  background-blend-mode: lighten, plus-lighter;\r\n  padding: 40px;\r\n`;\r\n\r\nexport const BanersFormatsContainerItemText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 49px;\r\n  line-height: 61px;\r\n  color: #57ff9a;\r\n  margin: 0 0 40px 0;\r\n`;\r\n\r\nexport const BanersFormatsContainerItemImg = styled.img`\r\n  width: 536px;\r\n  height: 228px;\r\n  margin: 0 0 30px 0;\r\n`;\r\n\r\nexport const BanersFormatsContainerItemSubText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  color: #ffffff;\r\n  margin: 0;\r\n`;\r\n\r\nexport const AdvantagesList = styled.ul`\r\n  margin: 0;\r\n`;\r\n\r\nexport const AdvantagesListItem = styled.li`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  letter-spacing: -0.02em;\r\n  width: 1182px;\r\n  color: #ffffff;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const TypeMainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: #fff;\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nexport const TypeSubContainer = styled.div`\r\n  background: url(.png),\r\n    linear-gradient(\r\n      100.71deg,\r\n      rgba(30, 40, 66, 0.28) -5.17%,\r\n      rgba(18, 22, 33, 0.28) 147.95%\r\n    );\r\n  background-blend-mode: lighten, plus-lighter;\r\n  padding: 27px 27px 54px 27px;\r\n`;\r\n\r\nexport const TypeSubContainerText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 36px;\r\n  line-height: 45px;\r\n  text-align: center;\r\n  margin: 0 0 15px 0;\r\n  color: #57ff9a;\r\n  width: 344px;\r\n`;\r\n\r\nexport const TypeSubContainerSubText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 86.5%;\r\n  text-align: center;\r\n  letter-spacing: -0.02em;\r\n  color: #ffffff;\r\n  width: 290px;\r\n  margin: 0 auto 18px;\r\n`;\r\n\r\nexport const TypeSubContainerImage = styled.div`\r\n  position: relative; /* Устанавливаем контейнер относительно */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  height: 290px;\r\n  width: 290px;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  /* Псевдоэлемент для дополнительной картинки */\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 150px; /* Размер дополнительной картинки */\r\n    height: 150px;\r\n    background: url(${green_play}) no-repeat center center;\r\n    background-size: contain;\r\n    opacity: 0; /* Скрываем картинку по умолчанию */\r\n    transition: opacity 0.3s ease; /* Плавный переход */\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 1; /* Показываем картинку при наведении */\r\n  }\r\n`;\r\n\r\nexport const ExapmlesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n  margin: 40px 0;\r\n`;\r\n\r\nexport const AdaptContainer = styled.div`\r\n  margin: 40px 0 60px;\r\n`;\r\n\r\nexport const WhyWeMainText = styled.h2`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 93px;\r\n  line-height: 116px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  background: linear-gradient(123.73deg, #ffffff -44.77%, #45aeb1 302.21%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n  margin: 100px 0 40px;\r\n`;\r\n\r\nexport const WhyWeSubText = styled.p`\r\n  font-family: 'Freigeist';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 38px;\r\n  line-height: 86.5%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  letter-spacing: -0.02em;\r\n  width: 1310px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const WhyWeWrapper = styled.div`\r\n  opacity: 0;\r\n  transform: translateY(50px);\r\n  transition: opacity 1s ease-out, transform 1s ease-out;\r\n\r\n  &.active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nexport const ListWrapper = styled.div`\r\n  opacity: 0;\r\n  transform: translateX(-200px);\r\n  transition: opacity 1s ease-out, transform 1s ease-out;\r\n\r\n  &.active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n"],"names":["ListTitle","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListItem","_templateObject3","_ref","title","data","_jsxs","_Fragment","children","_jsx","map","item","MainContainer","GreenOverlay","TextOverlay","ImageContainer","_templateObject4","isLeft","Image","_templateObject5","ArrowLink","_templateObject6","gsap","ScrollTrigger","leftRef","useRef","rightRef","useEffect","leftElement","current","rightElement","x","opacity","duration","ease","scrollTrigger","trigger","start","end","toggleActions","ref","src","screen_one","WhiteArrow","screen_two","BanersPageContainer","MainBannerContainer","BanersMainTitle","BanersSubTitle","BanersFormatsText","BanersDefaultText","BanersGreenOverlay","_templateObject7","_templateObject8","BanersTextOverlay","_templateObject9","BanersFormatsContainer","_templateObject10","_templateObject11","_templateObject12","_templateObject13","BanersFormatsContainerItem","_templateObject14","BanersFormatsContainerItemText","_templateObject15","BanersFormatsContainerItemImg","_templateObject16","BanersFormatsContainerItemSubText","_templateObject17","AdvantagesList","_templateObject18","AdvantagesListItem","_templateObject19","TypeMainContainer","_templateObject20","TypeSubContainer","_templateObject21","TypeSubContainerText","_templateObject22","TypeSubContainerSubText","_templateObject23","TypeSubContainerImage","_templateObject24","ExapmlesContainer","_templateObject25","AdaptContainer","_templateObject26","WhyWeMainText","_templateObject27","WhyWeSubText","_templateObject28","WhyWeWrapper","_templateObject29","ListWrapper","_templateObject30"],"sourceRoot":""}